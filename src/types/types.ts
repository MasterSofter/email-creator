import {v4 as uuidv4} from 'uuid';

export const Stations = [{name: '–º. –ú–æ–ª–æ–¥–µ–∂–Ω–∞—è', imageUrl: 'metro-molodeznaya.png'},
  {name: '–º. –í–æ–π–∫–æ–≤—Å–∫–∞—è', imageUrl: 'metro-voykovskaya.png'}];

export enum BadgeVariants {
  SolidPink,
  OutlinePink,
  SolidBlack
}

export enum EmailElements {
  Empty,
  About,
  SignUp,
  Title,
  BigImage,
  Badges,
  Paragraph
}

export class BaseEmailElement {
  readonly index: string;
  protected name: string;
  protected id: EmailElements;

  protected constructor(name: string, id: EmailElements, index : string | undefined = undefined) {
    this.name = name;
    this.id = id;
    if(index !== undefined)
      this.index = index;
    else
      this.index = uuidv4();
  }

  public get Name() {
    return this.name
  };

  public get ElementKey(): string {
    return `element-${this.index}`;
  }

  public get GetType() {
    return this.constructor.name;
  }

  public get ID() {
    return this.id
  }
}

export class EmptyElement extends BaseEmailElement {
  public constructor(index : string | undefined = undefined) {
    super('–ü—É—Å—Ç–æ–π —ç–ª–µ–º–µ–Ω—Ç', EmailElements.Empty, index);
  }
}

export class AboutElement extends BaseEmailElement {
  text: string;

  public constructor(text: string | null, index : string | undefined = undefined) {
    super('–ë–ª–æ–∫ \"About\"', EmailElements.About, index);

    if (text)
      this.text = text;
    else
      this.text = '<div class="paragraph">' +
        '<p><b>üî• –ß–µ–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?</b></p>' +
        '<br>' +
        '<p>–£—á–µ–Ω–∏–∫–æ–≤ –∂–¥—ë—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π ' +
        '–ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é, —Å–æ–∑–¥–∞–Ω–∏—é –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ ' +
        '—Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –∏–∑—É—á–µ–Ω–∏–µ –≥—Ä–∞—Ñ–æ–≤, —Ç–∞–±–ª–∏—Ü' +
        '–∏ —Ä–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏.</p>' +
        '<br>' +
        '<p><b>‚úÖ –í —á—ë–º –ø–æ–ª—å–∑–∞ –∫—É—Ä—Å–∞?</b></p>' +
        '<br>' +
        '<p>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∏—Ç—å—Å—è —É –≤–µ–¥—É—â–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ú–ê–ò, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –§–ò–ü–ò' +
        ' –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –û–ì–≠ –∏ –ï–ì–≠ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º.</p>' +
        '</div>';
  }

  public get Text(): string {
    return this.text;
  }

  public set Text(value: string) {
    this.text = value;
  }
}

export class SignUpElement extends BaseEmailElement {
  title: string;
  text: string;
  imageUrl: string;
  age: string;
  amountOfDays: string;
  metroStation: { name: string, imageUrl: string };
  periods: Array<string>;

  public constructor(initVal: {
    title: string,
    text: string,
    imageUrl: string,
    age: string,
    amountOfDays: string,
    metroStation: { name: string, imageUrl: string },
    periods: Array<string>
  } | null, index : string | undefined = undefined) {

    super('–ë–ª–æ–∫ \"–ó–∞–ø–∏—Å–∞—Ç—å—Å—è\"', EmailElements.SignUp, index);

    if (initVal) {
      this.title = initVal.title;
      this.text = initVal.text;
      this.imageUrl = initVal.imageUrl;
      this.age = initVal.age;
      this.amountOfDays = initVal.amountOfDays;
      this.metroStation = initVal.metroStation;
      this.periods = initVal.periods;
    } else {
      this.title = 'Minecraft-–∫–∞–Ω–∏–∫—É–ª—ã';
      this.text = '–†–µ–±—è—Ç–∞ —Å–æ–∑–¥–∞–¥—É—Ç –∏ –∞–Ω–∏–º–∏—Ä—É—é—Ç –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —Å–≤–æ–∏—Ö –∏–≥—Ä–æ–≤—ã—Ö –º–∏—Ä–æ–≤, –Ω–∞ —Å–∞–º–æ–º –ø–æ–ø—É–ª—è—Ä–Ω–æ–º —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!';
      this.imageUrl = '';
      this.age = '8-17 –ª–µ—Ç';
      this.amountOfDays = '5 –¥–Ω–µ–π';
      this.metroStation = Stations[0];
      this.periods = ['30 –æ–∫—Ç ‚Äî 3 –Ω–æ—è', '20 ‚Äî 24 –Ω–æ—è'];
    }
  }

  public get Title() {
    return this.title;
  }

  public set Title(value: string) {
    this.title = value;
  }

  public get Text() {
    return this.text;
  }

  public set Text(value: string) {
    this.text = value;
  }

  public get ImageUrl() {
    return this.imageUrl;
  }

  public set ImageUrl(value: string) {
    this.imageUrl = value;
  }

  public get Age() {
    return this.age;
  }

  public set Age(value: string) {
    this.age = value;
  }

  public get AmountOfDays() {
    return this.amountOfDays;
  }

  public set AmountOfDays(value: string) {
    this.amountOfDays = value;
  }

  public get MetroStation() {
    return this.metroStation;
  }

  public set MetroStation(value: { name: string, imageUrl: string }) {
    this.metroStation = value;
  }

  public get Periods() {
    return this.periods;
  }

  public set Periods(value: Array<string>) {
    this.periods = value;
  }
}

export class TitleElement extends BaseEmailElement {
  title: string = '';

  public constructor(title: string | null, index : string | undefined = undefined) {
    super('–ó–∞–≥–æ–ª–æ–≤–æ–∫', EmailElements.Title, index);
    if (title)
      this.title = title;
    else
      this.title = '–ü—Ä–∏–≤–µ—Ç ‚ú®';
  }

  public get Title(): string {
    return this.title;
  }

  public set Title(value: string) {
    this.title = value;
  }
}

export class BigImageElement extends BaseEmailElement {
  url: string = '';

  public constructor(url: string | null, index : string | undefined = undefined) {
    super('–ë–æ–ª—å—à–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞', EmailElements.BigImage, index);

    if (url)
      this.url = url;
    else
      this.url = '';
  }

  public get Url(): string {
    return this.url;
  }

  public set Url(value: string) {
    this.url = value;
  }
}


export class BadgesElement extends BaseEmailElement {
  badges: Array<{ variant: BadgeVariants, text: string }>;

  public constructor(badges: Array<{ variant: BadgeVariants, text: string }> | null, index : string | undefined = undefined) {
    super('–ë–µ–π–¥–∂–∏', EmailElements.Badges, index);

    if (badges)
      this.badges = badges;
    else
      this.badges = new Array<{ variant: BadgeVariants, text: string }>(
        {variant: BadgeVariants.SolidPink, text: '8-12 –ª–µ—Ç'},
        {variant: BadgeVariants.OutlinePink, text: '–ü—Ä–æ–¥–ª—ë–Ω–∫–∞!'},
        {variant: BadgeVariants.SolidBlack, text: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –¥–æ 30 –¥–µ–∫–∞–±—Ä—è'});
  }

  public get Badges(): Array<{ variant: BadgeVariants, text: string }> {
    return this.badges;
  }

  public set Badges(value: Array<{ variant: BadgeVariants, text: string }>) {
    this.badges = value;
  }
}


export class ParagraphElement extends BaseEmailElement {
  text: string = '';

  public constructor(text: string | null, index : string | undefined = undefined) {
    super('–ü–∞—Ä–∞–≥—Ä–∞—Ñ', EmailElements.Paragraph, index);

    if (text)
      this.text = text;
    else
      this.text = '–ö–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å —à–µ–¥–µ–≤—Ä—ã —Å –ø–æ–º–æ—â—å—é Midjorney, –≤—ã —É–∑–Ω–∞–µ—Ç–µ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ. ' +
        '–ê –º—ã —Ä–∞—Å—Å–∫–∞–∂–µ–º, —Å —á–µ–≥–æ –≤–æ–æ–±—â–µ –Ω–∞—á–∞–ª–æ—Å—å –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –∫—Ç–æ –Ω–∞—É—á–∏–ª –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ ¬´—Ä–∏—Å–æ–≤–∞—Ç—å¬ª.';
  }

  public get Text(): string {
    return this.text;
  }

  public set Text(value: string) {
    this.text = value;
  }
}

export class MailData {
  public version: number = 0;

  public elements: Array<BaseEmailElement>;

  constructor(version: number, elements: Array<BaseEmailElement> | null) {
    if (elements)
      this.elements = elements;
    else
      this.elements = new Array<BaseEmailElement>();
    this.version = version;
  }
}


